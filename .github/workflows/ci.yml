name: CI

on:
  push:
    branches:
      - main
    tags:
      - v*
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.event_name }}-${{ github.ref == 'refs/heads/main' && github.sha || '' }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test ${{ matrix.os.name }} ${{ matrix.python.name }}
    runs-on: ${{ matrix.os.runs-on }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - name: 🐧
            runs-on: ubuntu-latest
          - name: 🍎
            runs-on: macos-latest
          - name: 🪟
            runs-on: windows-latest
        python:
          - name: CPython 3.7
            major_dot_minor: '3.7'
            action: '3.7'
          - name: CPython 3.8
            major_dot_minor: '3.8'
            action: '3.8'
          - name: CPython 3.9
            major_dot_minor: '3.9'
            action: '3.9'
          - name: CPython 3.10
            major_dot_minor: '3.10'
            action: '3.10'
          - name: CPython 3.11
            major_dot_minor: '3.11'
            action: '3.11'
          - name: PyPy 3.7
            major_dot_minor: '3.7'
            action: 'pypy-3.7'
          - name: PyPy 3.8
            major_dot_minor: '3.8'
            action: 'pypy-3.8'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          # This allows the matrix to specify just the major.minor version while still
          # expanding it to get the latest patch version including alpha releases.
          # This avoids the need to update for each new alpha, beta, release candidate,
          # and then finally an actual release version.  actions/setup-python doesn't
          # support this for PyPy presently so we get no help there.
          #
          # CPython -> 3.9.0-alpha - 3.9.X
          # PyPy    -> pypy-3.7
          python-version: ${{ fromJSON(format('["{0}", "{1}"]', format('{0}.0-alpha - {0}.X', matrix.python.action), matrix.python.action))[startsWith(matrix.python.action, 'pypy')] }}
          architecture: x64
      - name: Run unittest
        run: |
          python --version --version
          python -m unittest
